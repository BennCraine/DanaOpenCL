component provides dataprocessing.Normalisation requires gpu.LogicalComputeDevice, data.DecUtil du{
    LogicalComputeDevice myDev

    Normalisation:Normalisation() {
        myDev = new LogicalComputeDevice()
        myDev.loadProgram("./resources-ext/opencl_kernels/dataprocessing/floatDiv.cl", "floatDiv")
    }

    dec[][] Normalisation:matrixDivision(dec matrix[][], dec divider) {
        myDev.createMatrix("mat", Compute.FLOAT, 2, new int[](matrix.arrayLength, matrix[0].arrayLength))
        myDev.writeMatrix("mat", matrix, null)
        myDev.createMatrix("out", Compute.FLOAT, 2, new int[](matrix.arrayLength, matrix[0].arrayLength))

        String params[] = new String[](new String("const:$(du.makeString(divider))"), new String("mat"), new String("out"))
        myDev.runProgram("floatDiv", params)

        Matrix m = myDev.readMatrix("out")
        dec returnVal[][] = m.fvalues

        myDev.destroyMatrix("mat")
        myDev.destroyMatrix("out")
        myDev.destroyArray("const:$(du.makeString(divider))")

        return returnVal
    }
}
