component provides gpu.ComputeDistributionManager requires gpu.ComputeManager,
                                                            gpu.Compute,
                                                            data.adt.List,
                                                            data.adt.HashTable,
                                                            data.adt.Queue,
                                                            data.IntUtil iu,
                                                            io.Output out
                                                            {

    ComputeManager hardwareInfo
    Compute nat

    List asynchQueues
    List synchQueues

    HashTable readQueues
    HashTable writeQueues
    HashTable myRw[] = new HashTable[2]

    String physicalDevices[]
    HashTable physicalDevicesIDs

    ComputeDistributionManager:ComputeDistributionManager(store ComputeManager physicalCompute, store Compute nativeCompute) {
        hardwareInfo = physicalCompute
        nat = nativeCompute

        asynchQueues = new List()
        synchQueues = new List()

        physicalDevices = hardwareInfo.getComputeDevices()
        int deviceIDs[] = hardwareInfo.getComputeDeviceIDs()

        physicalDevicesIDs = new HashTable()

        //map device names and device IDs
        for (int i = 0; i < deviceIDs.arrayLength; i++) {
            ChandleWrapper hand = new ChandleWrapper(deviceIDs[i])
            out.println(physicalDevices[i].string)
            physicalDevicesIDs.put(physicalDevices[i].string, hand) 
            ChandleWrapper e = physicalDevicesIDs.get(physicalDevices[i].string)
            int x = e.handle
        }
        out.println("deviceIDs len: $(iu.makeString(deviceIDs.arrayLength))")

        //create opencl context with all devices available
        nat.createContext_w(deviceIDs)

        //create one queue per physicalDevice
    }

    HashTableItem[] ComputeDistributionManager:getReadWriteQueues(store HashTable rw[]) {
        readQueues = new HashTable()
        writeQueues = new HashTable()
        HashTableItem devicesMap[] = physicalDevicesIDs.getContents()
        return devicesMap
    }

    HashTableItem ComputeDistributionManager:mallocWhichDevice() {
        HashTableItem keyValue = new HashTableItem()
        keyValue.key = physicalDevices[0].string
        keyValue.value = physicalDevicesIDs.get(physicalDevices[0].string)
        return keyValue
    }

    void ComputeDistributionManager:execProgram(ChandleWrapperArray kernelHandles, HashTable memoryObjects) {
        return
    }

}
